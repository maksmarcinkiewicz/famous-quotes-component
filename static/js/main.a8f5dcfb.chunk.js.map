{"version":3,"sources":["App.js","index.js"],"names":["StyledButton","withStyles","root","background","borderRadius","border","color","height","padding","boxShadow","label","textTransform","Button","App","useState","author","content","quote","setQuote","className","IconButton","style","fill","fontSize","variant","size","onClick","axios","get","then","res","data","catch","err","console","error","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mSAQMA,EAAeC,YAAW,CAC9BC,KAAM,CACJC,WAAY,mDACZC,aAAc,EACdC,OAAQ,EACRC,MAAO,QACPC,OAAQ,GACRC,QAAS,SACTC,UAAW,yCAEbC,MAAO,CACLC,cAAe,eAXEV,CAalBW,KAoDYC,MAhDf,WAEE,MAA0BC,mBAAS,CACjCC,OAAQ,GACRC,QAAS,KAFX,mBAAOC,EAAP,KAAcC,EAAd,KAgBA,OACE,qCAEA,oBAAIC,UAAU,YAAd,+BACA,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,UAAf,UACE,mBAAGA,UAAU,OAAb,SAAqBF,EAAMD,UAC3B,mBAAGG,UAAU,SAAb,SAAuBF,EAAMF,YAE/B,sBAAKI,UAAU,iBAAf,UACE,cAACC,EAAA,EAAD,UACI,cAAC,IAAD,CACEC,MAAO,CAAEC,KAAM,WACfC,SAAS,YAGf,cAACvB,EAAD,CACEwB,QAAQ,WACRC,KAAK,QACLN,UAAU,SACVO,QA/BW,WACjB,OAAOC,IAAMC,IAAI,kCAChBC,MAAK,SAACC,GACLZ,EAAS,2BAAID,GAAL,IAAYF,OAAQ,IAAMe,EAAIC,KAAKhB,OAAS,IAAKC,QAASc,EAAIC,KAAKf,cAE5EgB,OAAM,SAACC,GACNC,QAAQC,MAAMF,OAqBZ,SAMwB,KAAlBhB,EAAMD,QAAiB,iBAAmB,yBC7DxDoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a8f5dcfb.chunk.js","sourcesContent":["import axios from 'axios'\nimport './App.css';\nimport React, {useState, useEffect} from 'react'\nimport { withStyles } from '@material-ui/core/styles';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button'\n\nconst StyledButton = withStyles({\n  root: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    borderRadius: 3,\n    border: 0,\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n  },\n  label: {\n    textTransform: 'capitalize',\n  },\n})(Button);\n\n\n\nfunction App() {\n\n  const [quote, setQuote] = useState({\n    author: '',\n    content: ''\n   })\n\n   const fetchData = () => {\n    return axios.get('https://api.quotable.io/random')\n    .then((res) => {\n      setQuote({...quote, author: '\"' + res.data.author + '\"', content: res.data.content})\n    })\n    .catch((err) => {\n      console.error(err)\n    })\n  }\n  \n\n  return (\n    <>\n    \n    <h1 className='app-title'>Famous Quotes App</h1>\n    <div className=\"App\">\n      <div className='content'>\n        <p className='text'>{quote.content}</p>\n        <p className='author'>{quote.author}</p>\n      </div>\n      <div className='bottom-content'>\n        <IconButton>\n            <TwitterIcon \n              style={{ fill: '#FE6B8B'}}\n              fontSize='large' />\n        </IconButton>\n        \n        <StyledButton \n          variant='outlined' \n          size='large'\n          className='button' \n          onClick={fetchData}\n                 >\n             {quote.content === '' ? 'GENERATE QUOTE' : 'NEXT QUOTE'}\n          </StyledButton>\n      </div> \n    </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}